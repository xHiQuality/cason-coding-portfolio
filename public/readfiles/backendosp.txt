 /**
     * Finds the nearest {@code Stop} to the provided coordinates along {@code this} {@code Route}
     *
     * @param latitude the latitude with which to base proximity
     * @param longitude the longitude with which to base proximity
     *
     * @return the nearest {@code Stop} to the given location that is served by {@code this} {@code Route}
     */
    public Stop getNearestStop(double latitude, double longitude) {
        Stop[] nearestStops = DatabaseService.getNearbyStops(latitude, longitude, DatabaseService.stopCount());

        // Determine the first stop on nearestStops that serves this Route
        Stop nearestStopOnRoute = null;
        int i = 0;
        while (nearestStopOnRoute == null && i < nearestStops.length) {
            if (Arrays.stream(nearestStops[i].getServesRoutesIds()).anyMatch(id -> id == this.routeId)) {
                nearestStopOnRoute = nearestStops[i];
            }
            i++;
        }

        return nearestStopOnRoute;
    }